{"version":3,"sources":["assests/steps.gif","containers/Overview/index.jsx","containers/tablePage/index.jsx","store/action/index.js","containers/covidCharts/index.js","containers/time/timer.js","containers/ticker/ticker.js","containers/ticker/ticker2.js","assests/covid.gif","assests/giphy.gif","assests/vacination.gif","App.jsx","store/reducer/index.js","store/index.js","serviceWorker.js","index.js"],"names":["Header","Layout","Sider","Footer","Content","Overview","console","log","this","props","data","tableData","Global","fields","Date","split","date","dateFormat","className","src","steps","alt","gutter","span","title","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","React","Component","connect","state","Text","Typography","Link","Tablepage","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","width","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","Countries","columns","key","name","row","CountryCode","index","time","sorter","compare","a","b","multiple","dataSource","pagination","filters","extra","setDetails","payload","CovidCharts","height","marginHeight","marginWidth","frameBorder","CurrentTym","setInterval","document","getElementById","setdate","toLocaleString","hour","minute","second","hour12","innerHTML","class","id","MyAnimatedTypo","duration","delay","direction","iteration","timing","fillMode","MovingFunction","fontStyle","App","collapsed","loading","onCollapse","fetchDetails","minHeight","collapsible","theme","defaultSelectedKeys","mode","Item","PieChartOutlined","to","BugTwoTone","BarChartOutlined","borderRadius","gify","covidicon","justifyContent","tip","message","description","exact","path","getFullYear","dispatch","axios","get","then","SET_DETAILS","INITIAL_STATE","users","email","store","createStore","action","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d9610b9e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/steps.33bdff8d.gif\";","\r\nimport dateFormat from \"dateformat\";\r\nimport React from \"react\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Fragment } from \"react\";\r\nimport { Layout } from 'antd';\r\nimport steps from \"../../assests/steps.gif\";\r\n\r\n\r\nimport { Card, Col, Row } from 'antd';\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n\r\nclass Overview extends React.Component {\r\n\r\n  render() {\r\n\r\n\r\n    console.log(\" res in overview=>\", this.props.data)\r\n    const tableData = this.props.data.Global\r\n\r\n    // debugger\r\n    var fields = tableData.Date.split('T');\r\n    var date = dateFormat(fields, \"dddd, mmmm dS, yyyy, h:MM:ss TT\");\r\n\r\n    return (\r\n      <Fragment>\r\n        <Layout>\r\n\r\n          <Sider className=\"sidebar\"><img src={steps} className=\"sideimg\" alt=\"loading...\" />  </Sider>\r\n          <Layout>\r\n            <Header className=\"date\">{date}</Header>\r\n\r\n            <Content className=\"responsive\">\r\n\r\n             \r\n            <Row gutter={16} >\r\n                  <Col span={12} >\r\n                    <Card className=\"card one\"  title=\"New Confirmed \" >\r\n                      <h1>{tableData.NewConfirmed}</h1>\r\n\r\n                    </Card>\r\n                  </Col>\r\n                  <Col span={12} >\r\n                    <Card className=\"card two\" title=\" Total Confirmed \" >\r\n\r\n                      <h1 >{tableData.TotalConfirmed}</h1>\r\n                    </Card>\r\n                  </Col>\r\n                \r\n                  \r\n                </Row>\r\n                <Row gutter={16} >\r\n                 \r\n                  <Col span={12} >\r\n                    <Card className=\"card four\" title=\"New Deaths\" >\r\n                      <h1>{tableData.NewDeaths}</h1>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col span={12} >\r\n                    <Card className=\"card three\" title=\"Total Deaths\" >\r\n\r\n                      <h1>{tableData.TotalDeaths}</h1>\r\n                    </Card>\r\n                  </Col>\r\n                    </Row>\r\n                <Row gutter={16} >\r\n                  \r\n                  <Col span={12} >\r\n                    <Card className=\"card five\" title=\"New Recovered\" >\r\n                      <h1>{tableData.NewRecovered}</h1>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col span={12} >\r\n                    <Card className=\"card six\" title=\"Total Recovered\" >\r\n                      <h1>{tableData.TotalRecovered}</h1>\r\n                    </Card>\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n           \r\n            </Content>\r\n\r\n          </Layout>\r\n        </Layout>\r\n\r\n\r\n\r\n\r\n\r\n      </Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.Global,\r\n\r\n\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Overview);\r\n","import  dateFormat from \"dateformat\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport { Table,Input, Button } from 'antd';\r\nimport \"./table.css\"\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Typography, Space } from 'antd';\r\n\r\nconst { Text, Link } = Typography;\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n\r\n\r\nclass Tablepage extends React.Component {\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n  };\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n  \r\n  render() {\r\n    const onChange =(pagination, filters, sorter, extra)=> {\r\n      console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n    const tableData = this.props.data.Countries\r\n    // const date= this.props.data.Countries.Date.format('DD MMM, YYYY')\r\n\r\n\r\n   \r\n    \r\n    const columns = [\r\n     \r\n      {\r\n        key: 'Country',\r\n        title: 'Country',\r\n        dataIndex: 'Country',\r\n      \r\n        ...this.getColumnSearchProps('Country'),\r\n        render: (name, row) => {\r\n          return <div><img src={`https://www.countryflags.io/${row.CountryCode}/flat/64.png`} />\r\n          {name}</div>\r\n        }\r\n      },\r\n      {\r\n        key: 'Date',\r\n        title: 'Date',\r\n        dataIndex: 'Date',\r\n        render: (value, row, index) => {\r\n          var date = dateFormat(\"mediumDate\"); \r\n          var time = dateFormat(\"mediumTime\");\r\n          \r\n          // var fields = value.split('T');\r\n          // var date = fields[0];\r\n          // var time = fields[1];\r\n        //  var newtime= time.replace(/.106Z/g, ` Today`);\r\n         \r\n          return <span> <Text type=\"success\"> Updated</Text> <br/>{date}<br/>{time}</span>;\r\n\r\n            {/* {value.toLocaleString('').split('T')[0]} */}\r\n              {/* {value.toLocaleString('').split('T')[1].split(':')[0]} */}\r\n          {/* {value.toLocaleString('it-IT').split(\"T\")[1]} */}\r\n        \r\n        },\r\n      },\r\n      {\r\n        key: ' New Confirmed',\r\n        title: 'New Confirmed',\r\n        dataIndex: 'NewConfirmed',\r\n        sorter: {\r\n          compare: (a, b) => a.NewConfirmed - b.NewConfirmed,\r\n          multiple: 3,\r\n        },\r\n     \r\n       \r\n      },\r\n      {\r\n        key: 'TotalConfirmed',\r\n        title: 'Total Confirmed',\r\n        dataIndex: 'TotalConfirmed',\r\n        sorter: {\r\n          compare: (a, b) => a.TotalConfirmed - b.TotalConfirmed,\r\n          multiple: 3,\r\n        },\r\n  \r\n      },\r\n      {\r\n        key: 'NewDeaths',\r\n        \r\n        title: 'New Deaths',\r\n        dataIndex: 'NewDeaths',\r\n        sorter: {\r\n          compare: (a, b) => a.NewDeaths - b.NewDeaths,\r\n          multiple: 3,\r\n        },\r\n        \r\n      \r\n      },\r\n      {\r\n        key: 'TotalDeaths',\r\n        \r\n        title: 'Total Deaths',\r\n        dataIndex: 'TotalDeaths',\r\n        sorter: {\r\n          compare: (a, b) => a.TotalDeaths - b.TotalDeaths,\r\n          multiple: 3,\r\n        },\r\n      },\r\n      {\r\n        key: 'NewRecovered',\r\n  \r\n        title: 'New Recovered',\r\n        dataIndex: 'NewRecovered',\r\n        sorter: {\r\n          compare: (a, b) => a.NewRecovered - b.NewRecovered,\r\n          multiple: 3,\r\n        },\r\n\r\n      },\r\n      {\r\n        key: 'TotalRecovered',\r\n        \r\n        title: 'Total Recovered',\r\n        dataIndex: 'TotalRecovered',\r\n        sorter: {\r\n          compare: (a, b) => a.TotalRecovered - b.TotalRecovered,\r\n          multiple: 3,\r\n        },\r\n      },\r\n   \r\n\r\n    ];\r\n\r\n    return (\r\n  \r\n        <Layout>\r\n         \r\n          <Content className=\"responsive\">\r\n            <Table columns={columns} dataSource={tableData}   onChange={onChange}   \r\n         />\r\n          </Content>\r\n          \r\n        </Layout>\r\n     \r\n    )\r\n      ;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  data: state.Global\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Tablepage);\r\n","import axios from \"axios\";\r\nexport const FETCH_DETAILS = \"FETCH_DETAILS\";\r\nexport const SET_DETAILS = \"SET_DETAILS\";\r\n\r\n const fetchDetails=()=> {\r\n  return (dispatch)=> {\r\n    return axios.get(\"https://api.covid19api.com/summary\").then(({ data }) => {\r\n      \r\n      dispatch(setDetails(data));\r\n    });\r\n  };\r\n}\r\n\r\nconst setDetails=(data)=> {\r\n  return {\r\n    type: SET_DETAILS,\r\n    payload: data\r\n  };\r\n}\r\n\r\n\r\n// const set_data = (data) => {\r\n\r\n//     return (dispatch) => { \r\n//         dispatch({ type: \"SETDATA\", userss: data })\r\n        \r\n//     }\r\n// }\r\n\r\n// const testing =()=>{\r\n//     return (dispatch) => {\r\n//         dispatch({type:\"second\",animals:\"deletng all animals\"})\r\n       \r\n\r\n//     }\r\n\r\n// }\r\nexport { fetchDetails}\r\n\r\n\r\n\r\n\r\n\r\n","import React  from 'react'\r\nimport './styles.scss'\r\n\r\nconst CovidCharts = () => {\r\n  return (\r\n    <div className=\"covid-main\">\r\n    \r\n    <div className=\"covid-charts\">\r\n     \r\n     <div className=\"cards-wrapper\">\r\n       <iframe\r\n         src=\"https://public.domo.com/cards/dJ45D\"\r\n         width=\"100%\"\r\n         height=\"600\"\r\n         marginHeight=\"0\"\r\n         marginWidth=\"0\"\r\n         frameBorder=\"0\"\r\n       ></iframe>\r\n      \r\n     </div>\r\n     <div className=\"cards-wrapper\">\r\n       <iframe\r\n         src=\"https://public.domo.com/cards/dG1jy\"\r\n         width=\"100%\"\r\n         height=\"600\"\r\n         marginHeight=\"0\"\r\n         marginWidth=\"0\"\r\n         frameBorder=\"0\"\r\n       ></iframe>\r\n      \r\n     </div>\r\n     \r\n     <div className=\"cards-wrapper\">\r\n       <iframe\r\n         src=\"https://public.domo.com/cards/aKg4r\"\r\n         width=\"100%\"\r\n         height=\"600\"\r\n         marginHeight=\"0\"\r\n         marginWidth=\"0\"\r\n         frameBorder=\"0\"\r\n       ></iframe>\r\n     \r\n     </div>\r\n    \r\n   \r\n     <div className=\"cards-wrapper\">\r\n       <iframe\r\n         src=\"https://public.domo.com/cards/dNl4L\"\r\n         width=\"100%\"\r\n         height=\"600\"\r\n         marginHeight=\"0\"\r\n         marginWidth=\"0\"\r\n         frameBorder=\"0\"\r\n       ></iframe>\r\n  \r\n     </div>\r\n     <div className=\"cards-wrapper\">\r\n       <iframe\r\n         src=\"https://public.domo.com/cards/epNEr\"\r\n         width=\"100%\"\r\n         height=\"600\"\r\n         marginHeight=\"0\"\r\n         marginWidth=\"0\"\r\n         frameBorder=\"0\"\r\n       ></iframe>\r\n     \r\n     </div>\r\n     <div className=\"cards-wrapper\">\r\n       <iframe\r\n         src=\"https://public.domo.com/cards/dwoBJ\"\r\n         width=\"100%\"\r\n         height=\"600\"\r\n         marginHeight=\"0\"\r\n         marginWidth=\"0\"\r\n         frameBorder=\"0\"\r\n       ></iframe>\r\n     \r\n     </div>\r\n   \r\n    \r\n   \r\n     \r\n   </div>\r\n\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CovidCharts;\r\n","import React, { Component } from 'react'\r\nimport \"./timer.css\"\r\nclass CurrentTym extends Component {\r\n state = {}\r\n render() {\r\n    const clock=() =>{\r\n        var time = document.getElementById(\"time\");\r\n  \r\n        var date = new Date();\r\n        \r\n         let setdate= date.toLocaleString(\"en-US\", {\r\n          \r\n            hour: 'numeric',\r\n            minute: '2-digit',\r\n            second: '2-digit',\r\n            hour12: true\r\n        });\r\n       \r\n        time.innerHTML=setdate;\r\n   \r\n       \r\n        }\r\n        var interval=setInterval(clock,1000);\r\n        \r\n  return(\r\n   \r\n\r\n     <div class=\"div1\">\r\n       <strong id=\"time\">00</strong>\r\n   </div>\r\n\r\n\r\n    \r\n\r\n    )\r\n   }\r\n }\r\n\r\n\r\nexport default CurrentTym","import React from 'react'\r\nimport MovingComponent from 'react-moving-text'\r\nimport \"./ticker.css\";\r\n\r\nconst MyAnimatedTypo = () => {\r\n  return (\r\n      <>\r\n    <MovingComponent\r\n   \r\n    type=\"slideInFromRight\"\r\n    duration=\"10000ms\"\r\n    delay=\"0s\"\r\n    direction=\"alternate\"\r\n   \r\n    iteration=\"infinite\"\r\n    timing=\"linear\"\r\n    fillMode=\"none\">\r\n      <h1 className=\"alertheading\"><span className=\"alert\" >Alert! </span>\r\n        Wear Mask , Maintain Distance, Stay Safe </h1>\r\n      \r\n    \r\n  </MovingComponent>\r\n \r\n  </>\r\n  )\r\n}\r\n\r\n\r\nexport default MyAnimatedTypo;\r\n","import React from 'react'\r\nimport \"./ticker.css\";\r\nimport MovingText from 'react-moving-text'\r\n\r\nconst MovingFunction   = () => {\r\n    return (\r\n        <>\r\n   \r\n  <MovingText\r\n  type=\"flash\"\r\n  duration=\"1000ms\"\r\n  delay=\"0s\"\r\n  direction=\"alternate\"\r\n  timing=\"ease\"\r\n  iteration=\"infinite\"\r\n  fillMode=\"both\">\r\n  <h1 className=\"corona\"> <span style={{color:\"red\",fontStyle:\"oblique\"}}> Corona</span> Virus</h1>\r\n  </MovingText>\r\n    </>\r\n    )\r\n  }\r\n  export default MovingFunction;","export default __webpack_public_path__ + \"static/media/covid.15004838.gif\";","export default __webpack_public_path__ + \"static/media/giphy.067f3c36.gif\";","export default __webpack_public_path__ + \"static/media/vacination.3ec7f3ec.gif\";","\nimport React from 'react';\nimport './App.css'\nimport 'antd/dist/antd.css';\nimport Overview from \"./containers/Overview\"\nimport Tablepage from \"./containers/tablePage\"\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Layout, Menu } from 'antd';\nimport { BugTwoTone, PieChartOutlined, BarChartOutlined } from '@ant-design/icons';\nimport { fetchDetails } from \"./store/action\";\nimport { connect } from \"react-redux\";\nimport { Spin, Alert } from 'antd';\nimport CovidCharts from \"./containers/covidCharts\";\nimport CurrentTym from \"./containers/time/timer\"\nimport { Row, Col } from 'antd';\nimport MyAnimatedTypo from \"./containers/ticker/ticker\"\nimport MovingFunction from './containers/ticker/ticker2'\nimport covidicon from \"./assests/covid.gif\";\nimport vacimnation from \"./assests/vacination.gif\";\nimport gify from \"./assests/giphy.gif\";\nconst {  Content, Footer, Sider } = Layout;\n\nclass App extends React.Component {\n    state = {\n        collapsed: false,\n        loading: true,\n    };\n\n    onCollapse = collapsed => {\n        console.log(collapsed);\n        this.setState({ collapsed });\n    };\n\n    async componentDidMount() {\n        await this.props.fetchDetails();\n        this.setState({ loading: false })\n    }\n\n\n    render() {\n\n        const { collapsed } = this.state;\n\n\n\n        return (\n            <Layout style={{ minHeight: \"99vh\",backgroundColor:\"white\" }} >\n                <Router>\n                    <Sider collapsible style={{ backgroundColor: \"white\" ,height:\"100%\"}}\n                        collapsed={collapsed} onCollapse={this.onCollapse}>\n                        <div className=\"logo\">\n                             Stats\n                        </div>\n\n                        <Menu theme=\"light\" defaultSelectedKeys={['1']} mode=\"inline\">\n                            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n                                <Link to=\"/covid\">Overview</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\" icon={<BugTwoTone />}>\n                                <Link to=\"/Details\">Worldwide Details </Link>\n\n                            </Menu.Item>\n                            <Menu.Item key=\"3\" icon={<BarChartOutlined />}>\n                                <Link to=\"/CovidCharts\">Charts </Link>\n\n                            </Menu.Item>\n\n\n\n                        </Menu>\n                    </Sider>\n\n                    <Layout className=\"site-layout\">\n                        <Row className=\"iconHeader\">\n\n                            <Col span={6} >\n                         \n<img  className=\"hide\"  style={{ height: \"60px\", borderRadius: \"30%\" }} src={gify} alt=\"\" />\n                               <span className=\"icon\"><img  src={covidicon} alt=\"\" /></span>\n                                    <MovingFunction />\n                            \n\n                           \n                            </Col>\n                            <Col span={14}>\n                                <MyAnimatedTypo />\n                            </Col>\n                            <Col span={4}  style={{  display: \"flex\", justifyContent: \"flex-end\" }}> \n                            <CurrentTym /></Col>\n                        </Row>\n\n\n                        <Content >\n\n\n                            <div className=\"loadingdiv\">\n\n                                {this.state.loading ?\n                                    <Spin tip=\"Loading...\" size=\"large\">\n                                        <Alert className=\"alertbox\"\n                                            message=\" Please Wait\"\n                                            description=\"Worldwide Corona Information is loading... \"\n                                            type=\"info\"\n                                        />\n                                    </Spin>\n                                    :\n                                    <div >\n                                        <Route exact path=\"/covid\"><Overview /></Route>\n                                        <Route exact path=\"/Details\"><Tablepage /></Route>\n                                        <Route exact path=\"/CovidCharts\"><CovidCharts /></Route>\n                                    </div>\n                                }\n                            </div>\n                        </Content>\n                        <Footer >\n\n                            <p> Copyright &copy; {(new Date().getFullYear())} All Rights Reserved | Ruqiyah</p>\n                        </Footer>\n                    </Layout>\n                </Router>\n            </Layout>\n        );\n\n    }\n}\n\n\nexport default connect(null, { fetchDetails })(App);\n\n\n","export const FETCH_DETAILS = \"FETCH_DETAILS\";\r\nexport const SET_DETAILS = \"SET_DETAILS\";\r\n\r\nconst INITIAL_STATE= {\r\n    users:[{\r\n            name:\"popyi\",\r\n            email:\"popy@gmail.com\"\r\n        }]\r\n        ,\r\n    Global:{\r\n\r\n    }\r\n}\r\nexport default(state = INITIAL_STATE,action)=>{\r\n    console.log(\"action\",action)\r\n    switch (action.type) {\r\n\r\n        // case \"SETDATA\":\r\n        //     return({\r\n        //         ...state,\r\n        //         Global:[action.userss.name]\r\n        //         // return will return data in oper wali state\r\n        //     })\r\n            case SET_DETAILS:\r\n                    return {\r\n                        ...state,\r\n                         Global:action.payload\r\n                         };\r\n         }\r\n    return state;\r\n\r\n}","import reducer from \"./reducer\";\r\nimport { createStore ,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer,applyMiddleware(thunk));\r\nexport default store;\r\n\r\n// or\r\n// export default createStore(reducer);\r\n ","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n     const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}